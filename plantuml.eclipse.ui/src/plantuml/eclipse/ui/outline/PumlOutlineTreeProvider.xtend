/*
* generated by Xtext
*/
package plantuml.eclipse.ui.outline

import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider
import org.eclipse.xtext.ui.editor.outline.impl.DocumentRootNode
import org.eclipse.emf.ecore.EObject
import plantuml.eclipse.puml.Class
import plantuml.eclipse.puml.UmlDiagram
import org.eclipse.xtext.ui.editor.outline.impl.AbstractOutlineNode
import plantuml.eclipse.puml.ClassUml
import com.google.inject.Inject
import org.eclipse.xtext.ui.IImageHelper
import plantuml.eclipse.puml.Association

/**
 * Customization of the default outline structure.
 *
 * see http://www.eclipse.org/Xtext/documentation.html#outline
 */
class PumlOutlineTreeProvider extends DefaultOutlineTreeProvider {

	@Inject
    private IImageHelper imageHelper;

	AbstractOutlineNode classesParent;
	AbstractOutlineNode connectionsParent;
	
	def _createChildren(DocumentRootNode parentNode, UmlDiagram root){
		for(EObject umlDiagram : root.umlDiagrams){
			// Contents of PlantUML Class Diagram
			if(umlDiagram instanceof ClassUml){
				// Create Root Nodes for Elements
				classesParent = new AbstractOutlineNode(parentNode, imageHelper.getImage("class_obj.png"), "Classes", false){}
				connectionsParent = new AbstractOutlineNode(parentNode, imageHelper.getImage("reference.png"), "Connections", false){}
				// Loop through Class Elements
				for(EObject umlClassElement : umlDiagram.umlElements){
					if(umlClassElement instanceof Class){
						createNode(classesParent, umlClassElement);
					}
					if(umlClassElement instanceof Association){
						createNode(connectionsParent, umlClassElement);
					}
				}
			}
		}
	}




	/*
	override _createNode(IOutlineNode parentNode, EObject modelElement) {
		super._createNode(parentNode, modelElement);
	}

	def _text(UmlUse element) {
		return UmlUseCounter.toString() + ": " + element.text;
	}
	
	def _text(Class element){
		return "Name: " + element.name;
	}
	*/
}
